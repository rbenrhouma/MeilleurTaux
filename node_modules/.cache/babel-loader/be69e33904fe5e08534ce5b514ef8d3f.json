{"ast":null,"code":"var _jsxFileName = \"/Users/ridha/LeReacteurJs/Certificat/meilleursTaux/src/components/MT/MTZipCode.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MTInput from \"./MTInput\";\nexport default function MTZipCode(props) {\n  const {\n    name,\n    handleChange,\n    value,\n    type,\n    diasabled\n  } = props;\n  const {\n    devis\n  } = props.context.context;\n  console.log(devis);\n  const [zipCode, setZipCode] = useState(\"\");\n  const [zipCodes, setZipCodes] = useState([]);\n  useEffect(() => {}, [zipCodes]);\n\n  const localHandleChange = e => {\n    setZipCode(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchZipCode(zipCode);\n    if (devis) devis.zipCode = zipCode;\n  }, [zipCode]);\n\n  const fetchZipCode = async e => {\n    if (zipCode) {\n      const response = await axios.get(`https://vicopo.selfbuild.fr/cherche/${zipCode}`).then(response => {\n        setZipCodes(response.data.cities);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setZipCodes([]);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    className: (diasabled ? \" mtInputDisabled \" : \"mtInput \") + (type === \"number\" ? \" right \" : \" mtInput \"),\n    type: type,\n    name: name,\n    onChange: localHandleChange,\n    value: zipCode,\n    list: \"browsers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(\"datalist\", {\n    id: \"browsers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, zipCodes.map(option => React.createElement(\"option\", {\n    value: option.code + \" ( \" + option.city + \" )\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ridha/LeReacteurJs/Certificat/meilleursTaux/src/components/MT/MTZipCode.js"],"names":["React","useState","useEffect","axios","MTInput","MTZipCode","props","name","handleChange","value","type","diasabled","devis","context","console","log","zipCode","setZipCode","zipCodes","setZipCodes","localHandleChange","e","target","fetchZipCode","response","get","then","data","cities","catch","err","map","option","code","city"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,MAAiDL,KAAvD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYN,KAAK,CAACO,OAAN,CAAcA,OAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACgB,QAAD,CAAX,CAAT;;AAEA,QAAME,iBAAiB,GAAGC,CAAC,IAAI;AAC7BJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASb,KAAV,CAAV;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACA,QAAIJ,KAAJ,EAAWA,KAAK,CAACI,OAAN,GAAgBA,OAAhB;AACZ,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAKA,QAAMO,YAAY,GAAG,MAAMF,CAAN,IAAW;AAC9B,QAAIL,OAAJ,EAAa;AACX,YAAMQ,QAAQ,GAAG,MAAMrB,KAAK,CACzBsB,GADoB,CACf,uCAAsCT,OAAQ,EAD/B,EAEpBU,IAFoB,CAEfF,QAAQ,IAAI;AAChBL,QAAAA,WAAW,CAACK,QAAQ,CAACG,IAAT,CAAcC,MAAf,CAAX;AACD,OAJoB,EAKpBC,KALoB,CAKdC,GAAG,IAAI;AACZhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD,OAPoB,CAAvB;AAQD,KATD,MASO;AACLX,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAbD;;AAeA,SACE,0CACE;AACE,IAAA,SAAS,EACP,CAACR,SAAS,GAAG,mBAAH,GAAyB,UAAnC,KACCD,IAAI,KAAK,QAAT,GAAoB,SAApB,GAAgC,WADjC,CAFJ;AAKE,IAAA,IAAI,EAAEA,IALR;AAME,IAAA,IAAI,EAAEH,IANR;AAOE,IAAA,QAAQ,EAAEa,iBAPZ;AAQE,IAAA,KAAK,EAAEJ,OART;AASE,IAAA,IAAI,EAAC,UATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,CAACa,GAAT,CAAaC,MAAM,IAClB;AAAQ,IAAA,KAAK,EAAEA,MAAM,CAACC,IAAP,GAAc,KAAd,GAAsBD,MAAM,CAACE,IAA7B,GAAoC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CADF;AAoBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MTInput from \"./MTInput\";\n\nexport default function MTZipCode(props) {\n  const { name, handleChange, value, type, diasabled } = props;\n  const { devis } = props.context.context;\n  console.log(devis);\n  const [zipCode, setZipCode] = useState(\"\");\n  const [zipCodes, setZipCodes] = useState([]);\n\n  useEffect(() => {}, [zipCodes]);\n\n  const localHandleChange = e => {\n    setZipCode(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchZipCode(zipCode);\n    if (devis) devis.zipCode = zipCode;\n  }, [zipCode]);\n\n  const fetchZipCode = async e => {\n    if (zipCode) {\n      const response = await axios\n        .get(`https://vicopo.selfbuild.fr/cherche/${zipCode}`)\n        .then(response => {\n          setZipCodes(response.data.cities);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      setZipCodes([]);\n    }\n  };\n\n  return (\n    <>\n      <input\n        className={\n          (diasabled ? \" mtInputDisabled \" : \"mtInput \") +\n          (type === \"number\" ? \" right \" : \" mtInput \")\n        }\n        type={type}\n        name={name}\n        onChange={localHandleChange}\n        value={zipCode}\n        list=\"browsers\"\n      />\n      <datalist id=\"browsers\">\n        {zipCodes.map(option => (\n          <option value={option.code + \" ( \" + option.city + \" )\"} />\n        ))}\n      </datalist>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}