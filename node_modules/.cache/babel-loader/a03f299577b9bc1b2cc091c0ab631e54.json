{"ast":null,"code":"var _jsxFileName = \"/Users/ridha/LeReacteurJs/Certificat/MeilleurTaux-2/src/components/ProgressBar.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst ProgressBar = props => {\n  const {\n    pourcentage\n  } = props;\n  const ref = useRef(null);\n  useEffect(() => {\n    const width = ref.current ? ref.current.offsetWidth : 0;\n  }, [ref.current]);\n  const progressWidth = ref.current ? ref.current.offsetWidth : 0;\n  let position = pourcentage * progressWidth / 100;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: ref,\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    className: \"pourcent_bar\",\n    style: {\n      width: pourcentage + \"%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(\"span\", {\n    className: \"pourcent\",\n    style: {\n      left: position + \"px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, pourcentage, \"%\"))));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/ridha/LeReacteurJs/Certificat/MeilleurTaux-2/src/components/ProgressBar.js"],"names":["React","useState","useEffect","useRef","ProgressBar","props","pourcentage","ref","width","current","offsetWidth","progressWidth","position","left"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,KAAK,GAAGD,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACE,OAAJ,CAAYC,WAA1B,GAAwC,CAAtD;AACD,GAFQ,EAEN,CAACH,GAAG,CAACE,OAAL,CAFM,CAAT;AAIA,QAAME,aAAa,GAAGJ,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACE,OAAJ,CAAYC,WAA1B,GAAwC,CAA9D;AAEA,MAAIE,QAAQ,GAAIN,WAAW,GAAGK,aAAf,GAAgC,GAA/C;AAEA,SACE,0CACE;AAAK,IAAA,GAAG,EAAEJ,GAAV;AAAe,IAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEF,WAAW,GAAG;AAAvB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAED,QAAQ,GAAG;AAAnB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WADH,MAFJ,CADF,CADF,CADF;AAaD,CAzBD;;AA0BA,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst ProgressBar = props => {\n  const { pourcentage } = props;\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const width = ref.current ? ref.current.offsetWidth : 0;\n  }, [ref.current]);\n\n  const progressWidth = ref.current ? ref.current.offsetWidth : 0;\n\n  let position = (pourcentage * progressWidth) / 100;\n\n  return (\n    <>\n      <div ref={ref} className=\"progress-bar\">\n        <div className=\"pourcent_bar\" style={{ width: pourcentage + \"%\" }}>\n          {\n            <span className=\"pourcent\" style={{ left: position + \"px\" }}>\n              {pourcentage}%\n            </span>\n          }\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}